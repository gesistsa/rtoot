[{"path":[]},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement david@schochastics.net. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://gesistsa.github.io/rtoot/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://gesistsa.github.io/rtoot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rtoot authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://gesistsa.github.io/rtoot/articles/auth.html","id":"obtain-and-use-a-token","dir":"Articles","previous_headings":"","what":"Obtain and use a token","title":"Authentication with rtoot","text":"function rtoot can’t find valid token computer, automatically starts authentication. want start process manually, can calling: default, token stored directory R determined make sense called “rtoot_token.rds”. need worry using rtoot local machine using one token. change path argument auth_setup() tokens get stored location returned tools::R_user_dir(\"rtoot\", \"config\"). Look , want copy token different computer (ideally directory returned tools::R_user_dir(\"rtoot\", \"config\") new machine). want use multiple tokens, change name file token saved : use token, can either read environment provide function: can set default token options start session:","code":"library(rtoot) auth_setup() auth_setup(name = \"account1\") token <- readRDS(file.path(tools::R_user_dir(\"rtoot\", \"config\"), \"account1.rds\")) get_status(id = \"109297677620300632\", instance = \"mastodon.social\", token = token) options(\"rtoot_token\" = file.path(tools::R_user_dir(\"rtoot\", \"config\"), \"account1.rds\"))"},{"path":"https://gesistsa.github.io/rtoot/articles/auth.html","id":"environment-variable","dir":"Articles","previous_headings":"","what":"Environment variable","title":"Authentication with rtoot","text":"advanced users, can also store token environment variable (envvar). can either obtain token calling , already token Paste content clipboard configuration file. don’t access clipboard, inspect content.","code":"auth_setup(clipboard = TRUE) token <- readRDS(file.path(tools::R_user_dir(\"rtoot\", \"config\"), \"account1.rds\")) content <- convert_token_to_envvar(token)"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"authenticate","dir":"Articles","previous_headings":"","what":"Authenticate","title":"Introduction to rtoot","text":"First set credentials (see also vignette authentication) mastodon API allows different access levels. Setting token account grants access.","code":"auth_setup()"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"instances","dir":"Articles","previous_headings":"","what":"Instances","title":"Introduction to rtoot","text":"contrast twitter, mastodon single instance, federation different servers. sign specific server (say “mastodon.social”) can still communicate others servers (say “fosstodon.org”). existence different instances makes API calls complex. example, calls can made within instance (e.g get_timeline_home()), others can access instances need specify instance parameter (e.g. get_timeline_public()). list active instances can obtained get_fedi_instances(). results sorted number users. General information instance can obtained get_instance_general() get_instance_activity() shows activity last three months get_instance_trends() trending hashtags week.","code":"get_instance_general(instance = \"mastodon.social\") get_instance_activity(instance = \"mastodon.social\") get_instance_trends(instance = \"mastodon.social\")"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"get-toots","dir":"Articles","previous_headings":"","what":"Get toots","title":"Introduction to rtoot","text":"get recent toots specific instance use get_timeline_public() get recent toots containing specific hashtag use get_timeline_hashtag() function get_timeline_home() allows get recent toots timeline.","code":"get_timeline_public(instance = \"mastodon.social\") get_timeline_hashtag(hashtag = \"rstats\", instance = \"mastodon.social\") get_timeline_home()"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"get-accounts","dir":"Articles","previous_headings":"","what":"Get accounts","title":"Introduction to rtoot","text":"rtoot exposes several account level endpoints. require account id instead username input. , knowledge, straightforward way obtaining account id. package can get id via search_accounts(). (Future versions allow use username user id interchangeably) Using id, can get followers following users get_account_followers() get_account_following() statuses get_account_statuses().","code":"search_accounts(\"schochastics\") id <- \"109302436954721982\" get_account_followers(id) get_account_following(id) get_account_statuses(id)"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"posting-statuses","dir":"Articles","previous_headings":"","what":"Posting statuses","title":"Introduction to rtoot","text":"can post toots : can also include media alt_text. can mark toot sensitive setting sensitive = TRUE add spoiler text spoiler_text. aware excessive automated posting frowned upon (even ToS) many instances. Make sure check ToS instance mindful using function.","code":"post_toot(status = \"my first rtoot #rstats\") post_toot(status = \"my first rtoot #rstats\", media=\"path/to/media\",            alt_text = \"description of media\")"},{"path":"https://gesistsa.github.io/rtoot/articles/rtoot.html","id":"pagination","dir":"Articles","previous_headings":"","what":"Pagination","title":"Introduction to rtoot","text":"relevant functions package support pagination results limit parameter larger default page size (40 cases). case, may get results requested since pages always fetched whole. example request 70 records, get 80 back, given many records exist.","code":""},{"path":"https://gesistsa.github.io/rtoot/articles/stream.html","id":"specifying-parameters","dir":"Articles","previous_headings":"","what":"Specifying parameters","title":"Live streaming toots","text":"default, functions stream statuses 30 seconds. can adjusted via parameter timeout. set Inf, data streamed indefinitely. parameter file_name used specify file data written. non provided, temporary file created. However, recommend always set parameter explicitely. stream_timeline_public() stream_timeline_hashtag(), can also decide want stream globally, specific instance. want stream specific instance, set local=TRUE set instance desired instance. instance NULL, function uses instance obtained token (see vignette authentication).","code":""},{"path":"https://gesistsa.github.io/rtoot/articles/stream.html","id":"streaming-and-parsing","dir":"Articles","previous_headings":"","what":"Streaming and parsing","title":"Live streaming toots","text":"parameters specified, can start desired stream. Streaming occupy current instance R specified time elapsed error occurs. Streaming shouldn’t memory intensive can start new R instance parallel. verbose=TRUE, functions indicate streaming supposed stop number statuses written file. Note contrast rtweet, streaming functions never directly return data. can done afterwards using parse_stream() reads json converts data frame. Note process can take depending number statuses file.","code":"#stream a minute of all statuses stream_timeline_public(timeout = 60, file_name = \"public.json\")  #stream a minute of all statuses using the rstats hashtag stream_timeline_public(hashtag = \"rstats\", timeout = 60, file_name = \"public.json\")"},{"path":"https://gesistsa.github.io/rtoot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Schoch. Author, maintainer. Chung-hong Chan. Author. Johannes Gruber. Contributor. Tim Schatto-Eckrodt. Contributor. Lluís Revilla Sancho. Author.","code":""},{"path":"https://gesistsa.github.io/rtoot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schoch, D. & Chan, C-h., (2023). Rtoot: Collecting Analyzing Mastodon Data. Mobile Media & Communication.","code":"@Article{,   title = {Rtoot: Collecting and Analyzing Mastodon Data},   author = {David Schoch and Chung-hong Chan},   year = {2023},   url = {https://github.com/gesistsa/rtoot},   journal = {Mobile Media & Communication},   doi = {10.1177/20501579231176678}, }"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"rtoot-","dir":"","previous_headings":"","what":"Collecting and Analyzing Mastodon Data","title":"Collecting and Analyzing Mastodon Data","text":"Interact mastodon API R. Get started reading vignette(\"rtoot\"). Please cite package : Schoch, D. & Chan, C-h., (2023). Rtoot: Collecting Analyzing Mastodon Data. Mobile Media & Communication, https://doi.org/10.1177/20501579231176678. BibTeX entry, use output citation(\"rtoot\").","code":""},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Collecting and Analyzing Mastodon Data","text":"get current released version CRAN: can install development version rtoot GitHub:","code":"install.packages(\"rtoot\") pak::pak(\"gesistsa/rtoot\")"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"authenticate","dir":"","previous_headings":"","what":"Authenticate","title":"Collecting and Analyzing Mastodon Data","text":"First set credentials (see also vignette(\"auth\")) mastodon API allows different access levels. Setting token account grants access.","code":"auth_setup()"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"instances","dir":"","previous_headings":"","what":"Instances","title":"Collecting and Analyzing Mastodon Data","text":"contrast twitter, mastodon single instance, federation different servers. sign specific server (say “mastodon.social”) can still communicate others servers (say “fosstodon.org”). existence different instances makes API calls complex. example, calls can made within instance (e.g get_timeline_home()), others can access instances need specify instance parameter (e.g. get_timeline_public()). list active instances can obtained get_fedi_instances(). results sorted number users. General information instance can obtained get_instance_general() get_instance_activity() shows activity last three months get_instance_trends() trending hashtags week.","code":"get_instance_general(instance = \"mastodon.social\") get_instance_activity(instance = \"mastodon.social\") get_instance_trends(instance = \"mastodon.social\")"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"get-toots","dir":"","previous_headings":"","what":"Get toots","title":"Collecting and Analyzing Mastodon Data","text":"get recent toots specific instance use get_timeline_public() get recent toots containing specific hashtag use get_timeline_hashtag() function get_timeline_home() allows get recent toots timeline.","code":"get_timeline_public(instance = \"mastodon.social\") get_timeline_hashtag(hashtag = \"rstats\", instance = \"mastodon.social\") get_timeline_home()"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"get-accounts","dir":"","previous_headings":"","what":"Get accounts","title":"Collecting and Analyzing Mastodon Data","text":"rtoot exposes several account level endpoints. require account id instead username input. , knowledge, straightforward way obtaining account id. package can get id via search_accounts(). (Future versions allow use username user id interchangeably) Using id, can get followers following users get_account_followers() get_account_following() statuses get_account_statuses().","code":"search_accounts(\"schochastics\") id <- \"109302436954721982\" get_account_followers(id) get_account_following(id) get_account_statuses(id)"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"posting-statuses","dir":"","previous_headings":"","what":"Posting statuses","title":"Collecting and Analyzing Mastodon Data","text":"can post toots : can also include media alt_text. can mark toot sensitive setting sensitive = TRUE add spoiler text spoiler_text. (aware excessive automated posting frowned upon (even ToS) many instances. Make sure check ToS instance mindful using function.)","code":"post_toot(status = \"my first rtoot #rstats\") post_toot(     status = \"my first rtoot #rstats\", media = \"path/to/media\",     alt_text = \"description of media\" )"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"streaming","dir":"","previous_headings":"","what":"Streaming","title":"Collecting and Analyzing Mastodon Data","text":"rtoot allows stream statuses three different streams. get public status instance use stream_timeline_public() timeout parameter time seconds data streamed (set Inf indefinite streaming). just local timeline needed, use local=TRUE set instance (use provided token). stream_timeline_hashtag() streams statuses containing specific hashtag statuses directly written file json. function parse_stream() can used read convert json data frame.","code":"stream_timeline_public(timeout = 30, file_name = \"public.json\") stream_timeline_hashtag(\"rstats\", timeout = 30, file_name = \"rstats_public.json\")"},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"pagination","dir":"","previous_headings":"","what":"Pagination","title":"Collecting and Analyzing Mastodon Data","text":"relevant functions package support pagination results limit parameter larger default page size (40 cases). case, may get results requested since pages always fetched whole. example request 70 records, get 80 back, given many records exist.","code":""},{"path":"https://gesistsa.github.io/rtoot/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Collecting and Analyzing Mastodon Data","text":"Please note rtoot project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with a Mastodon instance — auth_setup","title":"Authenticate with a Mastodon instance — auth_setup","text":"Authenticate Mastodon instance","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with a Mastodon instance — auth_setup","text":"","code":"auth_setup(   instance = NULL,   type = NULL,   name = NULL,   path = NULL,   clipboard = FALSE,   verbose = TRUE,   browser = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with a Mastodon instance — auth_setup","text":"instance public instance Mastodon (e.g., mastodon.social). type Either \"public\" create public authentication \"user\" create authentication user (e.g., want post R query followers). name give token name, case want store one. path path store token . default store tokens path returned tools::R_user_dir(\"rtoot\", \"config\"). clipboard logical, whether export token clipboard verbose logical whether display messages browser TRUE (default) browser window opened authenticate, else URL provided can copy/paste browser ","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with a Mastodon instance — auth_setup","text":"bearer token","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authenticate with a Mastodon instance — auth_setup","text":"either name path set FALSE, token returned saved. like save token environment variable, please set clipboard TRUE. token copied clipboard environment variable format. Please paste environment file, e.g. \".Renviron\", restart R session.","code":""},{"path":[]},{"path":"https://gesistsa.github.io/rtoot/reference/auth_setup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate with a Mastodon instance — auth_setup","text":"","code":"if (FALSE) { # \\dontrun{ auth_setup(\"mastodon.social\", \"public\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/convert_token_to_envvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert token to environment variable — convert_token_to_envvar","title":"Convert token to environment variable — convert_token_to_envvar","text":"Convert token environment variable","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/convert_token_to_envvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert token to environment variable — convert_token_to_envvar","text":"","code":"convert_token_to_envvar(token, clipboard = TRUE, verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/convert_token_to_envvar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert token to environment variable — convert_token_to_envvar","text":"token bearer token, either public user level clipboard logical, whether export token clipboard verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/convert_token_to_envvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert token to environment variable — convert_token_to_envvar","text":"Token (environment variable format), invisibily","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/convert_token_to_envvar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert token to environment variable — convert_token_to_envvar","text":"","code":"if (FALSE) { # \\dontrun{ x <- auth_setup(\"mastodon.social\", \"public\") envvar <- convert_token_to_envvar(x) envvar } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":null,"dir":"Reference","previous_headings":"","what":"get a bearer token for the mastodon api — create_token","title":"get a bearer token for the mastodon api — create_token","text":"get bearer token mastodon api","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get a bearer token for the mastodon api — create_token","text":"","code":"create_token(client, type = \"public\", browser = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get a bearer token for the mastodon api — create_token","text":"client rtoot client object created get_client type one \"public\" \"user\". See details browser TRUE (default) browser window opened authenticate, else URL provided can copy/paste browser ","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get a bearer token for the mastodon api — create_token","text":"mastodon bearer token","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get a bearer token for the mastodon api — create_token","text":"TBA","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/create_token.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"get a bearer token for the mastodon api — create_token","text":"https://docs.joinmastodon.org/client/authorized/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the instance for a specific user — get_account","title":"Query the instance for a specific user — get_account","text":"Query instance specific user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the instance for a specific user — get_account","text":"","code":"get_account(id, instance = NULL, token = NULL, anonymous = FALSE, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the instance for a specific user — get_account","text":"id character, Local ID user (username) instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the instance for a specific user — get_account","text":"account","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the instance for a specific user — get_account","text":"","code":"if (FALSE) { # \\dontrun{ get_account(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get blocks of user — get_account_blocks","title":"Get blocks of user — get_account_blocks","text":"Get blocks user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get blocks of user — get_account_blocks","text":"","code":"get_account_blocks(   max_id,   since_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get blocks of user — get_account_blocks","text":"max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get blocks of user — get_account_blocks","text":"tibble list blocked users","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get blocks of user — get_account_blocks","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_blocks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get blocks of user — get_account_blocks","text":"","code":"if (FALSE) { # \\dontrun{ # needs user level token get_account_blocks() } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bookmarks of user — get_account_bookmarks","title":"Get bookmarks of user — get_account_bookmarks","text":"Get bookmarks user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bookmarks of user — get_account_bookmarks","text":"","code":"get_account_bookmarks(   max_id,   since_id,   min_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bookmarks of user — get_account_bookmarks","text":"max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id min_id character, Return results younger id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bookmarks of user — get_account_bookmarks","text":"bookmarked statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get bookmarks of user — get_account_bookmarks","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_bookmarks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bookmarks of user — get_account_bookmarks","text":"","code":"if (FALSE) { # \\dontrun{ get_account_followers(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":null,"dir":"Reference","previous_headings":"","what":"Get favourites of user — get_account_favourites","title":"Get favourites of user — get_account_favourites","text":"Get favourites user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get favourites of user — get_account_favourites","text":"","code":"get_account_favourites(   max_id,   min_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get favourites of user — get_account_favourites","text":"max_id character POSIXct (date time), Return results older id min_id character, Return results younger id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get favourites of user — get_account_favourites","text":"tibble list favourited statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get favourites of user — get_account_favourites","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_favourites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get favourites of user — get_account_favourites","text":"","code":"if (FALSE) { # \\dontrun{ # needs user level token get_account_favourites() } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Get featured tags of a user — get_account_featured_tags","title":"Get featured tags of a user — get_account_featured_tags","text":"Get featured tags user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get featured tags of a user — get_account_featured_tags","text":"","code":"get_account_featured_tags(id, token = NULL, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get featured tags of a user — get_account_featured_tags","text":"id character, local ID user (username) token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get featured tags of a user — get_account_featured_tags","text":"tibble list featured_tags","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get featured tags of a user — get_account_featured_tags","text":"functions needs user level auth token","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_featured_tags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get featured tags of a user — get_account_featured_tags","text":"","code":"if (FALSE) { # \\dontrun{ get_account_featured_tags(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get followers of a user — get_account_followers","title":"Get followers of a user — get_account_followers","text":"Get followers user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get followers of a user — get_account_followers","text":"","code":"get_account_followers(   id,   max_id,   since_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get followers of a user — get_account_followers","text":"id character, local ID user (username) max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id limit integer, maximum number results return. Defaults 40. token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get followers of a user — get_account_followers","text":"tibble list followers","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get followers of a user — get_account_followers","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_followers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get followers of a user — get_account_followers","text":"","code":"if (FALSE) { # \\dontrun{ get_account_followers(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":null,"dir":"Reference","previous_headings":"","what":"Get accounts a user follows — get_account_following","title":"Get accounts a user follows — get_account_following","text":"Get accounts user follows","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get accounts a user follows — get_account_following","text":"","code":"get_account_following(   id,   max_id,   since_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get accounts a user follows — get_account_following","text":"id character, local ID user (username) max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get accounts a user follows — get_account_following","text":"tibble list accounts user follows","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get accounts a user follows — get_account_following","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_following.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get accounts a user follows — get_account_following","text":"","code":"if (FALSE) { # \\dontrun{ get_account_following(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Get lists containing the user — get_account_lists","title":"Get lists containing the user — get_account_lists","text":"Get lists containing user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get lists containing the user — get_account_lists","text":"","code":"get_account_lists(id, token = NULL, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get lists containing the user — get_account_lists","text":"id character, local ID user (username) token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get lists containing the user — get_account_lists","text":"tibble list lists","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get lists containing the user — get_account_lists","text":"functions needs user level auth token","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get lists containing the user — get_account_lists","text":"","code":"if (FALSE) { # \\dontrun{ get_account_lists(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get mutes of user — get_account_mutes","title":"Get mutes of user — get_account_mutes","text":"Get mutes user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get mutes of user — get_account_mutes","text":"","code":"get_account_mutes(   max_id,   since_id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get mutes of user — get_account_mutes","text":"max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get mutes of user — get_account_mutes","text":"tibble list muted users","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get mutes of user — get_account_mutes","text":"functions needs user level auth token. limit>40, automatic pagination used. may get results requested.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_mutes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get mutes of user — get_account_mutes","text":"","code":"if (FALSE) { # \\dontrun{ # needs user level token get_account_mutes() } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":null,"dir":"Reference","previous_headings":"","what":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"Find whether given account followed, blocked, muted, etc.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"","code":"get_account_relationships(ids, token = NULL, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"ids vector account ids token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"tibble list relationships","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"functions needs user level auth token","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_relationships.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find out whether a given account is followed, blocked, muted, etc. — get_account_relationships","text":"","code":"if (FALSE) { # \\dontrun{ fol <- get_account_followers(\"109302436954721982\") get_account_relationships(fol$id) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statuses from a user — get_account_statuses","title":"Get statuses from a user — get_account_statuses","text":"Get statuses user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statuses from a user — get_account_statuses","text":"","code":"get_account_statuses(   id,   max_id,   since_id,   min_id,   limit = 20L,   exclude_reblogs = FALSE,   hashtag,   instance = NULL,   token = NULL,   anonymous = FALSE,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statuses from a user — get_account_statuses","text":"id character, local ID user (username) max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id min_id character POSIXct (date time), Return results immediately newer id limit integer, Maximum number results return exclude_reblogs logical, Whether filter boosts response. hashtag character, filter statuses using specific hashtag. instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statuses from a user — get_account_statuses","text":"tibble list statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get statuses from a user — get_account_statuses","text":"anonymous calls public statuses returned. user token supplied also private statuses user authorized see returned","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_account_statuses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get statuses from a user — get_account_statuses","text":"","code":"if (FALSE) { # \\dontrun{ get_account_statuses(\"109302436954721982\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_client.html","id":null,"dir":"Reference","previous_headings":"","what":"register a mastodon client — get_client","title":"register a mastodon client — get_client","text":"register mastodon client","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"register a mastodon client — get_client","text":"","code":"get_client(instance = \"mastodon.social\")"},{"path":"https://gesistsa.github.io/rtoot/reference/get_client.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"register a mastodon client — get_client","text":"instance server name","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"register a mastodon client — get_client","text":"rtoot client object","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_client.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"register a mastodon client — get_client","text":"https://docs.joinmastodon.org/client/token/#creating--application","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_context.html","id":null,"dir":"Reference","previous_headings":"","what":"View statuses above and below this status in the thread — get_context","title":"View statuses above and below this status in the thread — get_context","text":"Query instance information context specific status. context contains statuses status thread.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View statuses above and below this status in the thread — get_context","text":"","code":"get_context(id, instance = NULL, token = NULL, anonymous = FALSE, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View statuses above and below this status in the thread — get_context","text":"id character, local ID status database instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns named list two tibbles, representing ancestors (statuses status) descendants (statuses status). Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View statuses above and below this status in the thread — get_context","text":"context toot tibble list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View statuses above and below this status in the thread — get_context","text":"","code":"if (FALSE) { # \\dontrun{ get_context(id = \"109294719267373593\", instance = \"mastodon.social\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of fediverse servers — get_fedi_instances","title":"Get a list of fediverse servers — get_fedi_instances","text":"Get list fediverse servers","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of fediverse servers — get_fedi_instances","text":"","code":"get_fedi_instances(token = NA, n = 20, ...)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a list of fediverse servers — get_fedi_instances","text":"token token instances.social (different Mastodon token!) n number servers show ... additional parameters instances.social API. See https://instances.social/api/doc/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of fediverse servers — get_fedi_instances","text":"tibble fediverse instances","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a list of fediverse servers — get_fedi_instances","text":"function uses API instances.social needs separate token. Results sorted number users","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_fedi_instances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of fediverse servers — get_fedi_instances","text":"","code":"if (FALSE) { # \\dontrun{ get_fedi_instances(n = 5) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":null,"dir":"Reference","previous_headings":"","what":"Get various information about a specific instance — get_instance","title":"Get various information about a specific instance — get_instance","text":"Get various information specific instance","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get various information about a specific instance — get_instance","text":"","code":"get_instance_general(instance = NULL, token = NULL, anonymous = TRUE)  get_instance_peers(instance = NULL, token = NULL, anonymous = TRUE)  get_instance_activity(instance = NULL, token = NULL, anonymous = TRUE)  get_instance_emoji(instance = NULL, token = NULL, anonymous = TRUE)  get_instance_directory(   instance = NULL,   token = NULL,   offset = 0,   limit = 40,   order = \"active\",   local = FALSE,   anonymous = TRUE,   parse = TRUE )  get_instance_trends(   instance = NULL,   token = NULL,   limit = 10,   anonymous = TRUE )  get_instance_rules(instance = NULL, token = NULL, anonymous = FALSE)  get_instance_blocks(instance = NULL, token = NULL, anonymous = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get various information about a specific instance — get_instance","text":"instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous logical, API call made anonymously? Defaults TRUE instances might need authentication offset many accounts skip returning results. Default 0. limit integer, Maximum number results return order 'active' sort recently posted statuses (default) 'new' sort recently created profiles. local logical, show local accounts? parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get various information about a specific instance — get_instance","text":"instance details list tibble depending call function","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get various information about a specific instance — get_instance","text":"get_instance_general Returns general information instance get_instance_peers Returns peers instance get_instance_activity Shows weekly activity instance (3 months) get_instance_emoji Lists custom emojis available instance get_instance_directory directory profiles instance aware get_instance_trends Tags used frequently within past week get_instance_rules Prints rules instance get_instance_blocks List domains blocked instance.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_instance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get various information about a specific instance — get_instance","text":"","code":"if (FALSE) { # \\dontrun{  get_instance_general(\"mastodon.social\")  get_instance_activity(\"mastodon.social\")  get_instance_emoji(\"mastodon.social\")  get_instance_peers(\"mastodon.social\")  get_instance_directory(\"mastodon.social\",limit = 2) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_list_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"View accounts in a list — get_list_accounts","title":"View accounts in a list — get_list_accounts","text":"View accounts list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_list_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View accounts in a list — get_list_accounts","text":"","code":"get_list_accounts(   id,   limit = 40L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_list_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View accounts in a list — get_list_accounts","text":"id character, id list limit integer, number records return token bearer token created create_token parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical, whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_list_accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View accounts in a list — get_list_accounts","text":"tibble list accounts","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_list_accounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View accounts in a list — get_list_accounts","text":"","code":"if (FALSE) { # \\dontrun{ get_list_accounts(id = \"test\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"View your lists — get_lists","title":"View your lists — get_lists","text":"Fetch lists user owns","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View your lists — get_lists","text":"","code":"get_lists(id = \"\", token = NULL, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View your lists — get_lists","text":"id character, either id list return \"\" show lists token bearer token created create_token parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View your lists — get_lists","text":"tibble list lists owned user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View your lists — get_lists","text":"","code":"if (FALSE) { # \\dontrun{ get_lists() } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_poll.html","id":null,"dir":"Reference","previous_headings":"","what":"View a poll — get_poll","title":"View a poll — get_poll","text":"View polls attached statuses. discover poll ID, need use get_status() look poll.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_poll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View a poll — get_poll","text":"","code":"get_poll(id, instance = NULL, token = NULL, anonymous = FALSE, parse = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/get_poll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View a poll — get_poll","text":"id character, ID poll database instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_poll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View a poll — get_poll","text":"poll","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_poll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View a poll — get_poll","text":"","code":"if (FALSE) { # \\dontrun{ get_poll(id = \"105976\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_status.html","id":null,"dir":"Reference","previous_headings":"","what":"View information about a specific status — get_status","title":"View information about a specific status — get_status","text":"Query instance information specific status. get_status returns complete information status. get_reblogged_by returns boosted given status. get_favourited_by returns favourited given status.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View information about a specific status — get_status","text":"","code":"get_status(id, instance = NULL, token = NULL, anonymous = FALSE, parse = TRUE)  get_reblogged_by(   id,   instance = NULL,   token = NULL,   anonymous = FALSE,   parse = TRUE )  get_favourited_by(   id,   instance = NULL,   token = NULL,   anonymous = FALSE,   parse = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View information about a specific status — get_status","text":"id character, local ID status database instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View information about a specific status — get_status","text":"status list users","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"View information about a specific status — get_status","text":"","code":"if (FALSE) { # \\dontrun{ get_status(id = \"109326579599502650\") get_reblogged_by(id = \"109326579599502650\") get_favourited_by(id = \"109326579599502650\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hashtag timeline — get_timeline_hashtag","title":"Get hashtag timeline — get_timeline_hashtag","text":"Query instance timeline specific hashtag","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hashtag timeline — get_timeline_hashtag","text":"","code":"get_timeline_hashtag(   hashtag = \"rstats\",   local = FALSE,   only_media = FALSE,   max_id,   since_id,   min_id,   limit = 20L,   instance = NULL,   token = NULL,   anonymous = FALSE,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hashtag timeline — get_timeline_hashtag","text":"hashtag character, Content #hashtag. hash optional local logical, Show local statuses? only_media logical, Show statuses media attached? max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id min_id character POSIXct (date time), Return results immediately newer id limit integer, Maximum number results return instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hashtag timeline — get_timeline_hashtag","text":"statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get hashtag timeline — get_timeline_hashtag","text":"max_id, since_id, min_id can either character POSIXct (date time). POSXIct, converted -called snowflake ID.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get hashtag timeline — get_timeline_hashtag","text":"https://docs.joinmastodon.org/methods/timelines/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_hashtag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hashtag timeline — get_timeline_hashtag","text":"","code":"if (FALSE) { # \\dontrun{ get_timeline_hashtag(hashtag = \"#ichbinhanna\") ## anonymously get_timeline_hashtag(hashtag = \"ichbinhanna\", instance = \"mastodon.social\", anonymous = TRUE) ## Search for toots by date get_timeline_hashtag(hashtag = \"ichbinhanna\", instance = \"mastodon.social\", anonymous = TRUE, max_id = as.POSIXct(\"2024-03-01\")) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":null,"dir":"Reference","previous_headings":"","what":"Get home and list timelines — get_timeline_home","title":"Get home and list timelines — get_timeline_home","text":"Query instance timeline either followed users specific list. functions can called user token create_token().","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get home and list timelines — get_timeline_home","text":"","code":"get_timeline_home(   local = FALSE,   max_id,   since_id,   min_id,   limit = 20L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )  get_timeline_list(   list_id,   max_id,   since_id,   min_id,   limit = 20L,   token = NULL,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get home and list timelines — get_timeline_home","text":"local logical, Show local statuses? max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id min_id character POSIXct (date time), Return results immediately newer id limit integer, Maximum number results return token user bearer token (read file default) parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages list_id character, Local ID list database.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get home and list timelines — get_timeline_home","text":"statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get home and list timelines — get_timeline_home","text":"max_id, since_id, min_id can either character POSIXct (date time). POSXIct, converted -called snowflake ID.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get home and list timelines — get_timeline_home","text":"https://docs.joinmastodon.org/methods/timelines/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_home.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get home and list timelines — get_timeline_home","text":"","code":"if (FALSE) { # \\dontrun{ get_timeline_home() } # } if (FALSE) { # \\dontrun{ get_timeline_list(\"<listid>\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the public timeline — get_timeline_public","title":"Get the public timeline — get_timeline_public","text":"Query instance public timeline","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the public timeline — get_timeline_public","text":"","code":"get_timeline_public(   local = FALSE,   remote = FALSE,   only_media = FALSE,   max_id,   since_id,   min_id,   limit = 20L,   instance = NULL,   token = NULL,   anonymous = FALSE,   parse = TRUE,   retryonratelimit = TRUE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the public timeline — get_timeline_public","text":"local logical, Show local statuses? remote logical, Show remote statuses? only_media logical, Show statuses media attached? max_id character POSIXct (date time), Return results older id since_id character POSIXct (date time), Return results newer id min_id character POSIXct (date time), Return results immediately newer id limit integer, Maximum number results return instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API. retryonratelimit TRUE, rate limit exhausted, wait refreshes. Mastodon rate limits refresh every 5 minutes. FALSE, rate limit exceeded, function terminate early warning; still get back results received point. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the public timeline — get_timeline_public","text":"statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the public timeline — get_timeline_public","text":"max_id, since_id, min_id can either character POSIXct (date time). POSXIct, converted -called snowflake ID.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get the public timeline — get_timeline_public","text":"https://docs.joinmastodon.org/methods/timelines/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/get_timeline_public.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the public timeline — get_timeline_public","text":"","code":"if (FALSE) { # \\dontrun{ ## as tibble get_timeline_public() ## as list get_timeline_public(parse = FALSE) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Parser of Mastodon stream — parse_stream","title":"Parser of Mastodon stream — parse_stream","text":"Converts Mastodon stream data (JSON file) parsed tibble.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parser of Mastodon stream — parse_stream","text":"","code":"parse_stream(path)"},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parser of Mastodon stream — parse_stream","text":"path Character, name JSON file data collected stream_timeline function.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parser of Mastodon stream — parse_stream","text":"tibble statuses","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parser of Mastodon stream — parse_stream","text":"stream sometimes returns invalid lines json. automatically skipped. Parsing can slow json contains large amount statuses","code":""},{"path":[]},{"path":"https://gesistsa.github.io/rtoot/reference/parse_stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parser of Mastodon stream — parse_stream","text":"","code":"if (FALSE) { # \\dontrun{ stream_timeline_public(1, file_name = \"stream.json\") parse_stream(\"stream.json\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add accounts to a list — post_list_accounts","title":"Add accounts to a list — post_list_accounts","text":"Add accounts list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add accounts to a list — post_list_accounts","text":"","code":"post_list_accounts(id, account_ids, token = NULL, verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add accounts to a list — post_list_accounts","text":"id character, id list account_ids ids accounts add (username) token user bearer token (read file default) verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add accounts to a list — post_list_accounts","text":"return value, called site effects","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_accounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add accounts to a list — post_list_accounts","text":"","code":"if (FALSE) { # \\dontrun{ # add some accounts to a list post_list_create(id = \"1234\", account_ids = c(1001, 1002)) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a list — post_list_create","title":"Create a list — post_list_create","text":"Create list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a list — post_list_create","text":"","code":"post_list_create(title, replies_policy = \"list\", token = NULL, verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a list — post_list_create","text":"title character, title list created replies_policy character,  One \"followed\", \"list\", \"none\". Defaults \"list\". token user bearer token (read file default) verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a list — post_list_create","text":"return value, called site effects","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_list_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a list — post_list_create","text":"","code":"if (FALSE) { # \\dontrun{ # create a list post_list_create(title = \"test\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform actions on a status — post_status","title":"Perform actions on a status — post_status","text":"Perform actions status","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform actions on a status — post_status","text":"","code":"post_status(id, action = \"favourite\", token = NULL, verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/post_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform actions on a status — post_status","text":"id character, status id perform action action character, one \"(un)favourite\",\"(un)reblog\",\"(un)bookmark\" token user bearer token (read file default) verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform actions on a status — post_status","text":"return value, called site effects","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_status.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform actions on a status — post_status","text":"","code":"if (FALSE) { # \\dontrun{ # favourite a status post_status(\"xxxxxx\", action = \"favourite\") # unfavourite a status post_status(\"xxxxxx\", action = \"unfavourite\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a thread — post_thread","title":"Post a thread — post_thread","text":"Create thread messages.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a thread — post_thread","text":"","code":"post_thread(   status = c(\"my first rtoot #rstats\", \"my first thread with rtoot\"),   token = NULL,   sensitive = FALSE,   spoiler_text = NULL,   visibility = \"public\",   scheduled_at = NULL,   language = NULL,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/post_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a thread — post_thread","text":"status character, toot status. Must 500 characters less. token user bearer token (read file default) sensitive logical, mark status attached media sensitive? spoiler_text character, text shown warning subject actual content. Statuses generally collapsed behind field. visibility character, Visibility posted status. One public (default), unlisted, private, direct. scheduled_at ISO 8601 Datetime schedule status. Must least 5 minutes future. language ISO 639 language code status. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a thread — post_thread","text":"character vector ids toots posted.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post a thread — post_thread","text":"","code":"if (FALSE) { # \\dontrun{ pt <- post_thread(visibility = \"direct\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_toot.html","id":null,"dir":"Reference","previous_headings":"","what":"Post status update to user's Mastodon account — post_toot","title":"Post status update to user's Mastodon account — post_toot","text":"aware excessive automated posting frowned upon (even ToS) many instances. Make sure check ToS instance mindful using function.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_toot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post status update to user's Mastodon account — post_toot","text":"","code":"post_toot(   status = \"my first rtoot #rstats\",   media = NULL,   alt_text = NULL,   token = NULL,   in_reply_to_id = NULL,   sensitive = FALSE,   spoiler_text = NULL,   visibility = \"public\",   scheduled_at = NULL,   language = NULL,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/post_toot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post status update to user's Mastodon account — post_toot","text":"status character, toot status. Must 500 characters less. media character, path media add post alt_text character, plain-text description media, accessibility purposes. token user bearer token (read file default) in_reply_to_id character, ID status replied , status reply sensitive logical, mark status attached media sensitive? spoiler_text character, text shown warning subject actual content. Statuses generally collapsed behind field. visibility character, Visibility posted status. One public (default), unlisted, private, direct. scheduled_at ISO 8601 Datetime schedule status. Must least 5 minutes future. language ISO 639 language code status. verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_toot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post status update to user's Mastodon account — post_toot","text":"return value, called site effects","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_toot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post status update to user's Mastodon account — post_toot","text":"","code":"if (FALSE) { # \\dontrun{ # post a simple status post_toot(\"my first rtoot #rstats\") # post a media file with alt text post_toot(\"look at this pic\", media = \"path/to/image\", alt_text = \"describe image\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/post_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform actions on an account — post_user","title":"Perform actions on an account — post_user","text":"Perform actions account","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform actions on an account — post_user","text":"","code":"post_user(id, action = \"follow\", comment = \"\", token = NULL, verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/post_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform actions on an account — post_user","text":"id character, user id perform action action character, one \"(un)follow\",\"(un)block\", \"(un)mute\", \"(un)pin\",\"note\" comment character (action=\"note\"), comment set user. Provide empty string leave parameter clear currently set note. token user bearer token (read file default) verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform actions on an account — post_user","text":"return value, called site effects","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/post_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform actions on an account — post_user","text":"","code":"if (FALSE) { # \\dontrun{ # follow a user post_user(\"xxxxxx\", action = \"follow\") # unfollow a user post_user(\"xxxxxx\", action = \"unfollow\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rtoot: Collect Mastodon data from R — rtoot-package","title":"rtoot: Collect Mastodon data from R — rtoot-package","text":"rtoots provides range functions interact Mastodon API. five main groups functions: get_account_<type>() get account level data get_timeline_<type>() get series statuses get_instance_<type>() get information Mastodon instances stream_<type>() stream statuses different timeline post_<type>() push content Mastodon R (auxiliary functions follow naming scheme) Get started reading vignette(\"rtoot\"). browse vignettes browseVignettes(package = \"rtoot\")","code":""},{"path":[]},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rtoot: Collect Mastodon data from R — rtoot-package","text":"Maintainer: David Schoch david@schochastics.net (ORCID) Authors: Chung-hong Chan chainsawtiney@gmail.com (ORCID) Lluís Revilla Sancho lluis.revilla@gmail.com (ORCID) contributors: Johannes Gruber JohannesB.Gruber@gmail.com (ORCID) [contributor] Tim Schatto-Eckrodt kudusch@posteo.de (ORCID) [contributor]","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":null,"dir":"Reference","previous_headings":"","what":"Query Mastodon API — rtoot","title":"Query Mastodon API — rtoot","text":"minimalistic interface querying Mastodon API. function advanced users want query Mastodon API endpoints R functions yet implemented. Please also note API responses parsed tibble. Refer official API documentation endpoints parameters.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query Mastodon API — rtoot","text":"","code":"rtoot(   endpoint,   ...,   params = list(),   token = NULL,   instance = NULL,   anonymous = FALSE )"},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query Mastodon API — rtoot","text":"endpoint character, Mastodon API endpoint. Currently, endpoints using GET supported ... Name-value pairs giving API parameters. params list, API parameters submitted token user bearer token (read file default) instance character, server name instance status located. NULL, instance used obtain token used. anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query Mastodon API — rtoot","text":"list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Query Mastodon API — rtoot","text":"https://docs.joinmastodon.org/methods/","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/rtoot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query Mastodon API — rtoot","text":"","code":"if (FALSE) { # \\dontrun{ rtoot(endpoint = \"api/v1/notifications\") rtoot(endpoint = \"api/v1/notifications\", limit = 8) ## same rtoot(endpoint = \"api/v1/notifications\", params = list(limit = 8)) rtoot(endpoint = \"api/v1/followed_tags\") ## reimplement `get_timeline_public` rtoot(   endpoint = \"api/v1/timelines/public\",   instance = \"mastodon.social\",   local = TRUE,   anonymous = TRUE ) } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/save_auth_rtoot.html","id":null,"dir":"Reference","previous_headings":"","what":"save a bearer token to file — save_auth_rtoot","title":"save a bearer token to file — save_auth_rtoot","text":"save bearer token file","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/save_auth_rtoot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"save a bearer token to file — save_auth_rtoot","text":"","code":"save_auth_rtoot(token, name = NULL, path = NULL)"},{"path":"https://gesistsa.github.io/rtoot/reference/save_auth_rtoot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"save a bearer token to file — save_auth_rtoot","text":"token bearer token created create_token name file name (want store one token). path path token stored.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/search_accounts.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the instance for a specific user — search_accounts","title":"Search the instance for a specific user — search_accounts","text":"Search instance specific user","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/search_accounts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the instance for a specific user — search_accounts","text":"","code":"search_accounts(   query,   limit = 40,   token = NULL,   anonymous = FALSE,   parse = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/search_accounts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the instance for a specific user — search_accounts","text":"query character, search string limit number search results return. Defaults 40 token user bearer token (read file default) anonymous API calls need token. Setting anonymous TRUE allows make anonymous call possible. parse logical, TRUE, default, returns tibble. Use FALSE  return \"raw\" list corresponding JSON returned Mastodon API.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/search_accounts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the instance for a specific user — search_accounts","text":"tibble ir list accounts","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/search_accounts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search the instance for a specific user — search_accounts","text":"","code":"if (FALSE) { # \\dontrun{ search_accounts(\"schochastics\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect live streams of Mastodon data — stream_timeline","title":"Collect live streams of Mastodon data — stream_timeline","text":"Collect live streams Mastodon data","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect live streams of Mastodon data — stream_timeline","text":"","code":"stream_timeline_public(   timeout = 30,   local = FALSE,   file_name = NULL,   append = TRUE,   instance = NULL,   token = NULL,   anonymous = FALSE,   verbose = TRUE )  stream_timeline_hashtag(   hashtag = \"rstats\",   timeout = 30,   local = FALSE,   file_name = NULL,   append = TRUE,   instance = NULL,   token = NULL,   anonymous = FALSE,   verbose = TRUE )  stream_timeline_list(   list_id,   timeout = 30,   file_name = NULL,   append = TRUE,   instance = NULL,   token = NULL,   anonymous = FALSE,   verbose = TRUE )"},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect live streams of Mastodon data — stream_timeline","text":"timeout Integer, Number seconds stream toots . Stream indefinitely timeout = Inf. stream can interrupted time, file_name still valid file. local logical, Show local statuses (either statuses instance one provided instance)? file_name character, name file. specified, write temporary file stream_toots*.json. append logical, TRUE append end file_name; FALSE, overwrite. instance character, server name instance status located. NULL, instance used obtain token used. token user bearer token (read file default) anonymous logical, API call made anonymously? Defaults TRUE instances might need authentication verbose logical whether display messages hashtag character, hashtag stream list_id character, id list stream","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect live streams of Mastodon data — stream_timeline","text":"return anything. Statuses written file","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Collect live streams of Mastodon data — stream_timeline","text":"stream_timeline_public stream public statuses instance stream_timeline_hashtag stream statuses containing specific hashtag stream_timeline_list stream statuses list","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/stream_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect live streams of Mastodon data — stream_timeline","text":"","code":"if (FALSE) { # \\dontrun{ # stream public timeline for 30 seconds stream_timeline_public(timeout = 30, file_name = \"public.json\") # stream timeline of mastodon.social  for 30 seconds stream_timeline_public(     timeout = 30, local = TRUE,     instance = \"mastodon.social\", file_name = \"social.json\" )  # stream hashtag timeline for 30 seconds stream_timeline_hashtag(\"rstats\", timeout = 30, file_name = \"rstats_public.json\") # stream hashtag timeline of mastodon.social  for 30 seconds stream_timeline_hashtag(\"rstats\",     timeout = 30, local = TRUE,     instance = \"fosstodon.org\", file_name = \"rstats_foss.json\" ) # json files can be parsed with parse_stream() parse_stream(\"rstats_foss.json\") } # }"},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify mastodon credentials — verify_credentials","title":"Verify mastodon credentials — verify_credentials","text":"Verify mastodon credentials","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify mastodon credentials — verify_credentials","text":"","code":"verify_credentials(token, verbose = TRUE)  verify_envvar(verbose = TRUE)"},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify mastodon credentials — verify_credentials","text":"token bearer token, either public user level verbose logical whether display messages","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify mastodon credentials — verify_credentials","text":"Raise error token valid. Return response verification API invisibly otherwise.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Verify mastodon credentials — verify_credentials","text":"created token environment variable, use verify_envvar verify token.","code":""},{"path":"https://gesistsa.github.io/rtoot/reference/verify_credentials.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify mastodon credentials — verify_credentials","text":"","code":"if (FALSE) { # \\dontrun{ # read a token from a file verify_credentials(token) } # }"},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-0359000","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.5.9000","title":"rtoot 0.3.5.9000","text":"added better error messages media upload fails (#160) fixed #172 added experimental feature posting threads (#173) @llrs","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-035","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.5","title":"rtoot 0.3.5","text":"CRAN release: 2024-10-30 fixed #153 allowing POSIXct max_id, min_id since_id (#154) @Kudusch fixed #158 VSCode similar editors return TRUE rstudio::isAvailable() (#159)","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-034","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.4","title":"rtoot 0.3.4","text":"CRAN release: 2024-01-09 added progress bar long running queries (#141) @chainsawriot added 429 check (#144) fixed #146 adding confirmation step auth_setup(browser = FALSE)(#147) fixed #149 removing quotes around inputted instance name though auth_setup(instance = \"\") (#150) @thisisnic","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-033","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.3","title":"rtoot 0.3.3","text":"CRAN release: 2023-11-05 added support lists (#135, #136) fixed links transfer GitHub","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-032","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.2","title":"rtoot 0.3.2","text":"CRAN release: 2023-06-29 added post_status() favourite/bookmark/reblog statuses (#134) fixed example get_status() (#134)","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-031","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.1","title":"rtoot 0.3.1","text":"CRAN release: 2023-06-05 Added proper citation (#133) fixed get_instance_rules bug (#132)","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-030","dir":"Changelog","previous_headings":"","what":"rtoot 0.3.0","title":"rtoot 0.3.0","text":"CRAN release: 2023-01-09 don’t throw error rate limit found (#95) switched API get_fedi_instances() (#122) added minimal endpoint (#123) fixed bugs (#113, #115)","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-020","dir":"Changelog","previous_headings":"","what":"rtoot 0.2.0","title":"rtoot 0.2.0","text":"CRAN release: 2022-11-30 possible set token via environment variable (#68) paginating results (#70) added ratelimit checking (#43) added pkgdown site (#79) added streaming functions stream_* (#84) added instance endpoints (#34)","code":""},{"path":"https://gesistsa.github.io/rtoot/news/index.html","id":"rtoot-010","dir":"Changelog","previous_headings":"","what":"rtoot 0.1.0","title":"rtoot 0.1.0","text":"CRAN release: 2022-11-11 Added NEWS.md file track changes package.","code":""}]
